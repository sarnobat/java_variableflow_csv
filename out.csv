"<A extends java.lang.annotation.Annotation> void visitCtAnnotation(spoon.reflect.declaration.CtAnnotation)::1","<A extends java.lang.annotation.Annotation> void visitCtAnnotation(spoon.reflect.declaration.CtAnnotation)::annotation"
"<A extends java.lang.annotation.Annotation> void visitCtAnnotation(spoon.reflect.declaration.CtAnnotation)::spoon.reflect.declaration.CtAnnotation annotation","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.declaration.CtAnnotation annotation"
"<A extends java.lang.annotation.Annotation> void visitCtAnnotation(spoon.reflect.declaration.CtAnnotation)::spoon.reflect.declaration.CtAnnotation annotation","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.declaration.CtAnnotation annotation"
"<A extends java.lang.annotation.Annotation> void visitCtAnnotationType(spoon.reflect.declaration.CtAnnotationType)::1","<A extends java.lang.annotation.Annotation> void visitCtAnnotationType(spoon.reflect.declaration.CtAnnotationType)::annotationType"
"<A extends java.lang.annotation.Annotation> void visitCtAnnotationType(spoon.reflect.declaration.CtAnnotationType)::spoon.reflect.declaration.CtAnnotationType annotationType","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.declaration.CtAnnotationType annotationType"
"<A extends java.lang.annotation.Annotation> void visitCtAnnotationType(spoon.reflect.declaration.CtAnnotationType)::spoon.reflect.declaration.CtAnnotationType annotationType","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.declaration.CtAnnotationType annotationType"
"<R> void visitCtBlock(spoon.reflect.code.CtBlock)::1","<R> void visitCtBlock(spoon.reflect.code.CtBlock)::block"
"<R> void visitCtBlock(spoon.reflect.code.CtBlock)::spoon.reflect.code.CtBlock block","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtBlock block"
"<R> void visitCtBlock(spoon.reflect.code.CtBlock)::spoon.reflect.code.CtBlock block","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtBlock block"
"<R> void visitCtReturn(spoon.reflect.code.CtReturn)::1","<R> void visitCtReturn(spoon.reflect.code.CtReturn)::returnStatement"
"<R> void visitCtReturn(spoon.reflect.code.CtReturn)::spoon.reflect.code.CtReturn returnStatement","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtReturn returnStatement"
"<R> void visitCtReturn(spoon.reflect.code.CtReturn)::spoon.reflect.code.CtReturn returnStatement","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtReturn returnStatement"
"<R> void visitCtStatementList(spoon.reflect.code.CtStatementList)::1","<R> void visitCtStatementList(spoon.reflect.code.CtStatementList)::statements"
"<R> void visitCtStatementList(spoon.reflect.code.CtStatementList)::spoon.reflect.code.CtStatementList statements","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtStatementList statements"
"<R> void visitCtStatementList(spoon.reflect.code.CtStatementList)::spoon.reflect.code.CtStatementList statements","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtStatementList statements"
"<S> void visitCtCase(spoon.reflect.code.CtCase)::1","<S> void visitCtCase(spoon.reflect.code.CtCase)::caseStatement"
"<S> void visitCtCase(spoon.reflect.code.CtCase)::spoon.reflect.code.CtCase caseStatement","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtCase caseStatement"
"<S> void visitCtCase(spoon.reflect.code.CtCase)::spoon.reflect.code.CtCase caseStatement","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtCase caseStatement"
"<S> void visitCtSwitch(spoon.reflect.code.CtSwitch)::1","<S> void visitCtSwitch(spoon.reflect.code.CtSwitch)::switchStatement"
"<S> void visitCtSwitch(spoon.reflect.code.CtSwitch)::spoon.reflect.code.CtSwitch switchStatement","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtSwitch switchStatement"
"<S> void visitCtSwitch(spoon.reflect.code.CtSwitch)::spoon.reflect.code.CtSwitch switchStatement","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtSwitch switchStatement"
"<T extends java.lang.Enum> void visitCtEnum(spoon.reflect.declaration.CtEnum)::1","<T extends java.lang.Enum> void visitCtEnum(spoon.reflect.declaration.CtEnum)::ctEnum"
"<T extends java.lang.Enum> void visitCtEnum(spoon.reflect.declaration.CtEnum)::spoon.reflect.declaration.CtEnum ctEnum","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.declaration.CtEnum ctEnum"
"<T extends java.lang.Enum> void visitCtEnum(spoon.reflect.declaration.CtEnum)::spoon.reflect.declaration.CtEnum ctEnum","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.declaration.CtEnum ctEnum"
"<T,A extends T> void visitCtAssignment(spoon.reflect.code.CtAssignment)::1","<T,A extends T> void visitCtAssignment(spoon.reflect.code.CtAssignment)::assignement"
"<T,A extends T> void visitCtAssignment(spoon.reflect.code.CtAssignment)::java.lang.Class spoon.reflect.code.CtVariableRead#class","spoon.reflect.declaration.CtElement#getElements(spoon.reflect.visitor.Filter)::new spoon.reflect.visitor.filter.TypeFilter#TypeFilter(java.lang.Class)"
"<T,A extends T> void visitCtAssignment(spoon.reflect.code.CtAssignment)::spoon.reflect.code.CtAssignment assignement","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtAssignment assignement"
"<T,A extends T> void visitCtAssignment(spoon.reflect.code.CtAssignment)::spoon.reflect.code.CtAssignment assignement","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtAssignment assignement"
"<T,A extends T> void visitCtOperatorAssignment(spoon.reflect.code.CtOperatorAssignment)::1","<T,A extends T> void visitCtOperatorAssignment(spoon.reflect.code.CtOperatorAssignment)::assignment"
"<T,A extends T> void visitCtOperatorAssignment(spoon.reflect.code.CtOperatorAssignment)::spoon.reflect.code.CtOperatorAssignment assignment","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtOperatorAssignment assignment"
"<T,A extends T> void visitCtOperatorAssignment(spoon.reflect.code.CtOperatorAssignment)::spoon.reflect.code.CtOperatorAssignment assignment","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtOperatorAssignment assignment"
"<T,E extends spoon.reflect.code.CtExpression> void visitCtExecutableReferenceExpression(spoon.reflect.code.CtExecutableReferenceExpression)::1","<T,E extends spoon.reflect.code.CtExpression> void visitCtExecutableReferenceExpression(spoon.reflect.code.CtExecutableReferenceExpression)::expression"
"<T,E extends spoon.reflect.code.CtExpression> void visitCtExecutableReferenceExpression(spoon.reflect.code.CtExecutableReferenceExpression)::spoon.reflect.code.CtExecutableReferenceExpression expression","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtExecutableReferenceExpression expression"
"<T,E extends spoon.reflect.code.CtExpression> void visitCtExecutableReferenceExpression(spoon.reflect.code.CtExecutableReferenceExpression)::spoon.reflect.code.CtExecutableReferenceExpression expression","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtExecutableReferenceExpression expression"
"<T> void visitCtAnnotationFieldAccess(spoon.reflect.code.CtAnnotationFieldAccess)::1","<T> void visitCtAnnotationFieldAccess(spoon.reflect.code.CtAnnotationFieldAccess)::annotationFieldAccess"
"<T> void visitCtAnnotationFieldAccess(spoon.reflect.code.CtAnnotationFieldAccess)::spoon.reflect.code.CtAnnotationFieldAccess annotationFieldAccess","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtAnnotationFieldAccess annotationFieldAccess"
"<T> void visitCtAnnotationFieldAccess(spoon.reflect.code.CtAnnotationFieldAccess)::spoon.reflect.code.CtAnnotationFieldAccess annotationFieldAccess","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtAnnotationFieldAccess annotationFieldAccess"
"<T> void visitCtAnnotationMethod(spoon.reflect.declaration.CtAnnotationMethod)::1","<T> void visitCtAnnotationMethod(spoon.reflect.declaration.CtAnnotationMethod)::annotationMethod"
"<T> void visitCtAnnotationMethod(spoon.reflect.declaration.CtAnnotationMethod)::spoon.reflect.declaration.CtAnnotationMethod annotationMethod","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.declaration.CtAnnotationMethod annotationMethod"
"<T> void visitCtAnnotationMethod(spoon.reflect.declaration.CtAnnotationMethod)::spoon.reflect.declaration.CtAnnotationMethod annotationMethod","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.declaration.CtAnnotationMethod annotationMethod"
"<T> void visitCtArrayRead(spoon.reflect.code.CtArrayRead)::1","<T> void visitCtArrayRead(spoon.reflect.code.CtArrayRead)::arrayRead"
"<T> void visitCtArrayRead(spoon.reflect.code.CtArrayRead)::spoon.reflect.code.CtArrayRead arrayRead","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtArrayRead arrayRead"
"<T> void visitCtArrayRead(spoon.reflect.code.CtArrayRead)::spoon.reflect.code.CtArrayRead arrayRead","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtArrayRead arrayRead"
"<T> void visitCtArrayTypeReference(spoon.reflect.reference.CtArrayTypeReference)::1","<T> void visitCtArrayTypeReference(spoon.reflect.reference.CtArrayTypeReference)::reference"
"<T> void visitCtArrayTypeReference(spoon.reflect.reference.CtArrayTypeReference)::spoon.reflect.reference.CtArrayTypeReference reference","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.reference.CtArrayTypeReference reference"
"<T> void visitCtArrayTypeReference(spoon.reflect.reference.CtArrayTypeReference)::spoon.reflect.reference.CtArrayTypeReference reference","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.reference.CtArrayTypeReference reference"
"<T> void visitCtArrayWrite(spoon.reflect.code.CtArrayWrite)::1","<T> void visitCtArrayWrite(spoon.reflect.code.CtArrayWrite)::arrayWrite"
"<T> void visitCtArrayWrite(spoon.reflect.code.CtArrayWrite)::spoon.reflect.code.CtArrayWrite arrayWrite","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtArrayWrite arrayWrite"
"<T> void visitCtArrayWrite(spoon.reflect.code.CtArrayWrite)::spoon.reflect.code.CtArrayWrite arrayWrite","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtArrayWrite arrayWrite"
"<T> void visitCtAssert(spoon.reflect.code.CtAssert)::1","<T> void visitCtAssert(spoon.reflect.code.CtAssert)::asserted"
"<T> void visitCtAssert(spoon.reflect.code.CtAssert)::spoon.reflect.code.CtAssert asserted","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtAssert asserted"
"<T> void visitCtAssert(spoon.reflect.code.CtAssert)::spoon.reflect.code.CtAssert asserted","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtAssert asserted"
"<T> void visitCtBinaryOperator(spoon.reflect.code.CtBinaryOperator)::1","<T> void visitCtBinaryOperator(spoon.reflect.code.CtBinaryOperator)::operator"
"<T> void visitCtBinaryOperator(spoon.reflect.code.CtBinaryOperator)::spoon.reflect.code.CtBinaryOperator operator","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtBinaryOperator operator"
"<T> void visitCtBinaryOperator(spoon.reflect.code.CtBinaryOperator)::spoon.reflect.code.CtBinaryOperator operator","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtBinaryOperator operator"
"<T> void visitCtCatchVariable(spoon.reflect.code.CtCatchVariable)::1","<T> void visitCtCatchVariable(spoon.reflect.code.CtCatchVariable)::catchVariable"
"<T> void visitCtCatchVariable(spoon.reflect.code.CtCatchVariable)::spoon.reflect.code.CtCatchVariable catchVariable","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtCatchVariable catchVariable"
"<T> void visitCtCatchVariable(spoon.reflect.code.CtCatchVariable)::spoon.reflect.code.CtCatchVariable catchVariable","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtCatchVariable catchVariable"
"<T> void visitCtCatchVariableReference(spoon.reflect.reference.CtCatchVariableReference)::1","<T> void visitCtCatchVariableReference(spoon.reflect.reference.CtCatchVariableReference)::reference"
"<T> void visitCtCatchVariableReference(spoon.reflect.reference.CtCatchVariableReference)::spoon.reflect.reference.CtCatchVariableReference reference","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.reference.CtCatchVariableReference reference"
"<T> void visitCtCatchVariableReference(spoon.reflect.reference.CtCatchVariableReference)::spoon.reflect.reference.CtCatchVariableReference reference","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.reference.CtCatchVariableReference reference"
"<T> void visitCtClass(spoon.reflect.declaration.CtClass)::1","<T> void visitCtClass(spoon.reflect.declaration.CtClass)::ctClass"
"<T> void visitCtClass(spoon.reflect.declaration.CtClass)::spoon.reflect.declaration.CtClass ctClass","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.declaration.CtClass ctClass"
"<T> void visitCtClass(spoon.reflect.declaration.CtClass)::spoon.reflect.declaration.CtClass ctClass","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.declaration.CtClass ctClass"
"<T> void visitCtCodeSnippetExpression(spoon.reflect.code.CtCodeSnippetExpression)::1","<T> void visitCtCodeSnippetExpression(spoon.reflect.code.CtCodeSnippetExpression)::expression"
"<T> void visitCtCodeSnippetExpression(spoon.reflect.code.CtCodeSnippetExpression)::spoon.reflect.code.CtCodeSnippetExpression expression","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtCodeSnippetExpression expression"
"<T> void visitCtCodeSnippetExpression(spoon.reflect.code.CtCodeSnippetExpression)::spoon.reflect.code.CtCodeSnippetExpression expression","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtCodeSnippetExpression expression"
"<T> void visitCtConditional(spoon.reflect.code.CtConditional)::1","<T> void visitCtConditional(spoon.reflect.code.CtConditional)::conditional"
"<T> void visitCtConditional(spoon.reflect.code.CtConditional)::spoon.reflect.code.CtConditional conditional","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtConditional conditional"
"<T> void visitCtConditional(spoon.reflect.code.CtConditional)::spoon.reflect.code.CtConditional conditional","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtConditional conditional"
"<T> void visitCtConstructor(spoon.reflect.declaration.CtConstructor)::1","<T> void visitCtConstructor(spoon.reflect.declaration.CtConstructor)::c"
"<T> void visitCtConstructor(spoon.reflect.declaration.CtConstructor)::spoon.reflect.declaration.CtConstructor c","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.declaration.CtConstructor c"
"<T> void visitCtConstructor(spoon.reflect.declaration.CtConstructor)::spoon.reflect.declaration.CtConstructor c","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.declaration.CtConstructor c"
"<T> void visitCtConstructorCall(spoon.reflect.code.CtConstructorCall)::1","<T> void visitCtConstructorCall(spoon.reflect.code.CtConstructorCall)::ctConstructorCall"
"<T> void visitCtConstructorCall(spoon.reflect.code.CtConstructorCall)::spoon.reflect.code.CtConstructorCall ctConstructorCall","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtConstructorCall ctConstructorCall"
"<T> void visitCtConstructorCall(spoon.reflect.code.CtConstructorCall)::spoon.reflect.code.CtConstructorCall ctConstructorCall","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtConstructorCall ctConstructorCall"
"<T> void visitCtEnumValue(spoon.reflect.declaration.CtEnumValue)::1","<T> void visitCtEnumValue(spoon.reflect.declaration.CtEnumValue)::enumValue"
"<T> void visitCtEnumValue(spoon.reflect.declaration.CtEnumValue)::spoon.reflect.declaration.CtEnumValue enumValue","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.declaration.CtEnumValue enumValue"
"<T> void visitCtEnumValue(spoon.reflect.declaration.CtEnumValue)::spoon.reflect.declaration.CtEnumValue enumValue","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.declaration.CtEnumValue enumValue"
"<T> void visitCtExecutableReference(spoon.reflect.reference.CtExecutableReference)::1","<T> void visitCtExecutableReference(spoon.reflect.reference.CtExecutableReference)::reference"
"<T> void visitCtExecutableReference(spoon.reflect.reference.CtExecutableReference)::spoon.reflect.reference.CtExecutableReference reference","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.reference.CtExecutableReference reference"
"<T> void visitCtExecutableReference(spoon.reflect.reference.CtExecutableReference)::spoon.reflect.reference.CtExecutableReference reference","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.reference.CtExecutableReference reference"
"<T> void visitCtField(spoon.reflect.declaration.CtField)::1","<T> void visitCtField(spoon.reflect.declaration.CtField)::f"
"<T> void visitCtField(spoon.reflect.declaration.CtField)::spoon.reflect.declaration.CtField f","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.declaration.CtField f"
"<T> void visitCtField(spoon.reflect.declaration.CtField)::spoon.reflect.declaration.CtField f","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.declaration.CtField f"
"<T> void visitCtFieldRead(spoon.reflect.code.CtFieldRead)::1","<T> void visitCtFieldRead(spoon.reflect.code.CtFieldRead)::fieldRead"
"<T> void visitCtFieldRead(spoon.reflect.code.CtFieldRead)::spoon.reflect.code.CtFieldRead fieldRead","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtFieldRead fieldRead"
"<T> void visitCtFieldRead(spoon.reflect.code.CtFieldRead)::spoon.reflect.code.CtFieldRead fieldRead","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtFieldRead fieldRead"
"<T> void visitCtFieldReference(spoon.reflect.reference.CtFieldReference)::1","<T> void visitCtFieldReference(spoon.reflect.reference.CtFieldReference)::reference"
"<T> void visitCtFieldReference(spoon.reflect.reference.CtFieldReference)::spoon.reflect.reference.CtFieldReference reference","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.reference.CtFieldReference reference"
"<T> void visitCtFieldReference(spoon.reflect.reference.CtFieldReference)::spoon.reflect.reference.CtFieldReference reference","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.reference.CtFieldReference reference"
"<T> void visitCtFieldWrite(spoon.reflect.code.CtFieldWrite)::1","<T> void visitCtFieldWrite(spoon.reflect.code.CtFieldWrite)::fieldWrite"
"<T> void visitCtFieldWrite(spoon.reflect.code.CtFieldWrite)::spoon.reflect.code.CtFieldWrite fieldWrite","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtFieldWrite fieldWrite"
"<T> void visitCtFieldWrite(spoon.reflect.code.CtFieldWrite)::spoon.reflect.code.CtFieldWrite fieldWrite","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtFieldWrite fieldWrite"
"<T> void visitCtInterface(spoon.reflect.declaration.CtInterface)::1","<T> void visitCtInterface(spoon.reflect.declaration.CtInterface)::intrface"
"<T> void visitCtInterface(spoon.reflect.declaration.CtInterface)::spoon.reflect.declaration.CtInterface intrface","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.declaration.CtInterface intrface"
"<T> void visitCtInterface(spoon.reflect.declaration.CtInterface)::spoon.reflect.declaration.CtInterface intrface","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.declaration.CtInterface intrface"
"<T> void visitCtIntersectionTypeReference(spoon.reflect.reference.CtIntersectionTypeReference)::1","<T> void visitCtIntersectionTypeReference(spoon.reflect.reference.CtIntersectionTypeReference)::reference"
"<T> void visitCtIntersectionTypeReference(spoon.reflect.reference.CtIntersectionTypeReference)::spoon.reflect.reference.CtIntersectionTypeReference reference","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.reference.CtIntersectionTypeReference reference"
"<T> void visitCtIntersectionTypeReference(spoon.reflect.reference.CtIntersectionTypeReference)::spoon.reflect.reference.CtIntersectionTypeReference reference","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.reference.CtIntersectionTypeReference reference"
"<T> void visitCtInvocation(spoon.reflect.code.CtInvocation)::1","<T> void visitCtInvocation(spoon.reflect.code.CtInvocation)::invocation"
"<T> void visitCtInvocation(spoon.reflect.code.CtInvocation)::spoon.reflect.code.CtInvocation invocation","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtInvocation invocation"
"<T> void visitCtInvocation(spoon.reflect.code.CtInvocation)::spoon.reflect.code.CtInvocation invocation","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtInvocation invocation"
"<T> void visitCtLambda(spoon.reflect.code.CtLambda)::1","<T> void visitCtLambda(spoon.reflect.code.CtLambda)::lambda"
"<T> void visitCtLambda(spoon.reflect.code.CtLambda)::spoon.reflect.code.CtLambda lambda","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtLambda lambda"
"<T> void visitCtLambda(spoon.reflect.code.CtLambda)::spoon.reflect.code.CtLambda lambda","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtLambda lambda"
"<T> void visitCtLiteral(spoon.reflect.code.CtLiteral)::1","<T> void visitCtLiteral(spoon.reflect.code.CtLiteral)::literal"
"<T> void visitCtLiteral(spoon.reflect.code.CtLiteral)::spoon.reflect.code.CtLiteral literal","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtLiteral literal"
"<T> void visitCtLiteral(spoon.reflect.code.CtLiteral)::spoon.reflect.code.CtLiteral literal","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtLiteral literal"
"<T> void visitCtLocalVariable(spoon.reflect.code.CtLocalVariable)::1","<T> void visitCtLocalVariable(spoon.reflect.code.CtLocalVariable)::localVariable"
"<T> void visitCtLocalVariable(spoon.reflect.code.CtLocalVariable)::spoon.reflect.code.CtLocalVariable localVariable","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtLocalVariable localVariable"
"<T> void visitCtLocalVariable(spoon.reflect.code.CtLocalVariable)::spoon.reflect.code.CtLocalVariable localVariable","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtLocalVariable localVariable"
"<T> void visitCtLocalVariableReference(spoon.reflect.reference.CtLocalVariableReference)::1","<T> void visitCtLocalVariableReference(spoon.reflect.reference.CtLocalVariableReference)::reference"
"<T> void visitCtLocalVariableReference(spoon.reflect.reference.CtLocalVariableReference)::spoon.reflect.reference.CtLocalVariableReference reference","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.reference.CtLocalVariableReference reference"
"<T> void visitCtLocalVariableReference(spoon.reflect.reference.CtLocalVariableReference)::spoon.reflect.reference.CtLocalVariableReference reference","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.reference.CtLocalVariableReference reference"
"<T> void visitCtMethod(spoon.reflect.declaration.CtMethod)::1","<T> void visitCtMethod(spoon.reflect.declaration.CtMethod)::m"
"<T> void visitCtMethod(spoon.reflect.declaration.CtMethod)::spoon.reflect.declaration.CtMethod m","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.declaration.CtMethod m"
"<T> void visitCtMethod(spoon.reflect.declaration.CtMethod)::spoon.reflect.declaration.CtMethod m","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.declaration.CtMethod m"
"<T> void visitCtNewArray(spoon.reflect.code.CtNewArray)::1","<T> void visitCtNewArray(spoon.reflect.code.CtNewArray)::newArray"
"<T> void visitCtNewArray(spoon.reflect.code.CtNewArray)::spoon.reflect.code.CtNewArray newArray","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtNewArray newArray"
"<T> void visitCtNewArray(spoon.reflect.code.CtNewArray)::spoon.reflect.code.CtNewArray newArray","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtNewArray newArray"
"<T> void visitCtNewClass(spoon.reflect.code.CtNewClass)::1","<T> void visitCtNewClass(spoon.reflect.code.CtNewClass)::newClass"
"<T> void visitCtNewClass(spoon.reflect.code.CtNewClass)::spoon.reflect.code.CtNewClass newClass","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtNewClass newClass"
"<T> void visitCtNewClass(spoon.reflect.code.CtNewClass)::spoon.reflect.code.CtNewClass newClass","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtNewClass newClass"
"<T> void visitCtParameter(spoon.reflect.declaration.CtParameter)::1","<T> void visitCtParameter(spoon.reflect.declaration.CtParameter)::parameter"
"<T> void visitCtParameter(spoon.reflect.declaration.CtParameter)::spoon.reflect.declaration.CtParameter parameter","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.declaration.CtParameter parameter"
"<T> void visitCtParameter(spoon.reflect.declaration.CtParameter)::spoon.reflect.declaration.CtParameter parameter","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.declaration.CtParameter parameter"
"<T> void visitCtParameterReference(spoon.reflect.reference.CtParameterReference)::1","<T> void visitCtParameterReference(spoon.reflect.reference.CtParameterReference)::reference"
"<T> void visitCtParameterReference(spoon.reflect.reference.CtParameterReference)::spoon.reflect.reference.CtParameterReference reference","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.reference.CtParameterReference reference"
"<T> void visitCtParameterReference(spoon.reflect.reference.CtParameterReference)::spoon.reflect.reference.CtParameterReference reference","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.reference.CtParameterReference reference"
"<T> void visitCtSuperAccess(spoon.reflect.code.CtSuperAccess)::1","<T> void visitCtSuperAccess(spoon.reflect.code.CtSuperAccess)::f"
"<T> void visitCtSuperAccess(spoon.reflect.code.CtSuperAccess)::spoon.reflect.code.CtSuperAccess f","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtSuperAccess f"
"<T> void visitCtSuperAccess(spoon.reflect.code.CtSuperAccess)::spoon.reflect.code.CtSuperAccess f","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtSuperAccess f"
"<T> void visitCtThisAccess(spoon.reflect.code.CtThisAccess)::1","<T> void visitCtThisAccess(spoon.reflect.code.CtThisAccess)::thisAccess"
"<T> void visitCtThisAccess(spoon.reflect.code.CtThisAccess)::spoon.reflect.code.CtThisAccess thisAccess","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtThisAccess thisAccess"
"<T> void visitCtThisAccess(spoon.reflect.code.CtThisAccess)::spoon.reflect.code.CtThisAccess thisAccess","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtThisAccess thisAccess"
"<T> void visitCtTypeAccess(spoon.reflect.code.CtTypeAccess)::1","<T> void visitCtTypeAccess(spoon.reflect.code.CtTypeAccess)::typeAccess"
"<T> void visitCtTypeAccess(spoon.reflect.code.CtTypeAccess)::spoon.reflect.code.CtTypeAccess typeAccess","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtTypeAccess typeAccess"
"<T> void visitCtTypeAccess(spoon.reflect.code.CtTypeAccess)::spoon.reflect.code.CtTypeAccess typeAccess","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtTypeAccess typeAccess"
"<T> void visitCtTypeReference(spoon.reflect.reference.CtTypeReference)::1","<T> void visitCtTypeReference(spoon.reflect.reference.CtTypeReference)::reference"
"<T> void visitCtTypeReference(spoon.reflect.reference.CtTypeReference)::spoon.reflect.reference.CtTypeReference reference","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.reference.CtTypeReference reference"
"<T> void visitCtTypeReference(spoon.reflect.reference.CtTypeReference)::spoon.reflect.reference.CtTypeReference reference","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.reference.CtTypeReference reference"
"<T> void visitCtUnaryOperator(spoon.reflect.code.CtUnaryOperator)::1","<T> void visitCtUnaryOperator(spoon.reflect.code.CtUnaryOperator)::operator"
"<T> void visitCtUnaryOperator(spoon.reflect.code.CtUnaryOperator)::spoon.reflect.code.CtUnaryOperator operator","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtUnaryOperator operator"
"<T> void visitCtUnaryOperator(spoon.reflect.code.CtUnaryOperator)::spoon.reflect.code.CtUnaryOperator operator","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtUnaryOperator operator"
"<T> void visitCtUnboundVariableReference(spoon.reflect.reference.CtUnboundVariableReference)::1","<T> void visitCtUnboundVariableReference(spoon.reflect.reference.CtUnboundVariableReference)::reference"
"<T> void visitCtUnboundVariableReference(spoon.reflect.reference.CtUnboundVariableReference)::spoon.reflect.reference.CtUnboundVariableReference reference","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.reference.CtUnboundVariableReference reference"
"<T> void visitCtUnboundVariableReference(spoon.reflect.reference.CtUnboundVariableReference)::spoon.reflect.reference.CtUnboundVariableReference reference","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.reference.CtUnboundVariableReference reference"
"<T> void visitCtVariableRead(spoon.reflect.code.CtVariableRead)::1","<T> void visitCtVariableRead(spoon.reflect.code.CtVariableRead)::variableRead"
"<T> void visitCtVariableRead(spoon.reflect.code.CtVariableRead)::spoon.reflect.code.CtVariableRead variableRead","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtVariableRead variableRead"
"<T> void visitCtVariableRead(spoon.reflect.code.CtVariableRead)::spoon.reflect.code.CtVariableRead variableRead","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtVariableRead variableRead"
"<T> void visitCtVariableWrite(spoon.reflect.code.CtVariableWrite)::1","<T> void visitCtVariableWrite(spoon.reflect.code.CtVariableWrite)::variableWrite"
"<T> void visitCtVariableWrite(spoon.reflect.code.CtVariableWrite)::spoon.reflect.code.CtVariableWrite variableWrite","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtVariableWrite variableWrite"
"<T> void visitCtVariableWrite(spoon.reflect.code.CtVariableWrite)::spoon.reflect.code.CtVariableWrite variableWrite","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtVariableWrite variableWrite"
"spoon.reflect.declaration.CtElement#getElements(spoon.reflect.visitor.Filter)::new spoon.reflect.visitor.filter.TypeFilter#TypeFilter(java.lang.Class)","spoon.reflect.declaration.CtElement#getElements(spoon.reflect.visitor.Filter)::1"
"spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtAnnotationFieldAccess annotationFieldAccess","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtArrayRead arrayRead","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtArrayWrite arrayWrite","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtAssert asserted","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtAssignment assignement","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtBinaryOperator operator","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtBlock block","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtBreak breakStatement","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtCase caseStatement","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtCatch catchBlock","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtCatchVariable catchVariable","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtCodeSnippetExpression expression","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtCodeSnippetStatement statement","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtComment comment","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtConditional conditional","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtConstructorCall ctConstructorCall","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtContinue continueStatement","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtDo doLoop","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtExecutableReferenceExpression expression","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtFieldRead fieldRead","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtFieldWrite fieldWrite","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtFor forLoop","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtForEach foreach","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtIf ifElement","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtInvocation invocation","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtLambda lambda","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtLiteral literal","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtLocalVariable localVariable","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtNewArray newArray","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtNewClass newClass","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtOperatorAssignment assignment","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtReturn returnStatement","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtStatementList statements","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtSuperAccess f","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtSwitch switchStatement","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtSynchronized synchro","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtThisAccess thisAccess","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtThrow throwStatement","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtTry tryBlock","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtTryWithResource tryWithResource","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtTypeAccess typeAccess","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtUnaryOperator operator","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtVariableRead variableRead","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtVariableWrite variableWrite","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtWhile whileLoop","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.declaration.CtAnnotation annotation","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.declaration.CtAnnotationMethod annotationMethod","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.declaration.CtAnnotationType annotationType","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.declaration.CtAnonymousExecutable anonymousExec","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.declaration.CtClass ctClass","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.declaration.CtConstructor c","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.declaration.CtEnum ctEnum","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.declaration.CtEnumValue enumValue","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.declaration.CtField f","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.declaration.CtInterface intrface","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.declaration.CtMethod m","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.declaration.CtPackage ctPackage","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.declaration.CtParameter parameter","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.declaration.CtTypeParameter typeParameter","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.reference.CtArrayTypeReference reference","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.reference.CtCatchVariableReference reference","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.reference.CtExecutableReference reference","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.reference.CtFieldReference reference","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.reference.CtIntersectionTypeReference reference","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.reference.CtLocalVariableReference reference","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.reference.CtPackageReference reference","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.reference.CtParameterReference reference","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.reference.CtTypeParameterReference ref","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.reference.CtTypeReference reference","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.reference.CtUnboundVariableReference reference","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.reference.CtWildcardReference wildcardReference","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtAnnotationFieldAccess annotationFieldAccess","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtArrayRead arrayRead","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtArrayWrite arrayWrite","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtAssert asserted","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtAssignment assignement","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtBinaryOperator operator","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtBlock block","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtBreak breakStatement","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtCase caseStatement","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtCatch catchBlock","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtCatchVariable catchVariable","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtCodeSnippetExpression expression","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtCodeSnippetStatement statement","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtComment comment","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtConditional conditional","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtConstructorCall ctConstructorCall","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtContinue continueStatement","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtDo doLoop","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtExecutableReferenceExpression expression","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtFieldRead fieldRead","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtFieldWrite fieldWrite","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtFor forLoop","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtForEach foreach","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtIf ifElement","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtInvocation invocation","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtLambda lambda","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtLiteral literal","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtLocalVariable localVariable","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtNewArray newArray","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtNewClass newClass","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtOperatorAssignment assignment","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtReturn returnStatement","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtStatementList statements","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtSuperAccess f","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtSwitch switchStatement","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtSynchronized synchro","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtThisAccess thisAccess","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtThrow throwStatement","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtTry tryBlock","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtTryWithResource tryWithResource","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtTypeAccess typeAccess","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtUnaryOperator operator","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtVariableRead variableRead","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtVariableWrite variableWrite","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtWhile whileLoop","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.declaration.CtAnnotation annotation","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.declaration.CtAnnotationMethod annotationMethod","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.declaration.CtAnnotationType annotationType","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.declaration.CtAnonymousExecutable anonymousExec","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.declaration.CtClass ctClass","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.declaration.CtConstructor c","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.declaration.CtEnum ctEnum","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.declaration.CtEnumValue enumValue","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.declaration.CtField f","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.declaration.CtInterface intrface","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.declaration.CtMethod m","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.declaration.CtPackage ctPackage","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.declaration.CtParameter parameter","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.declaration.CtTypeParameter typeParameter","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.reference.CtArrayTypeReference reference","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.reference.CtCatchVariableReference reference","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.reference.CtExecutableReference reference","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.reference.CtFieldReference reference","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.reference.CtIntersectionTypeReference reference","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.reference.CtLocalVariableReference reference","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.reference.CtPackageReference reference","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.reference.CtParameterReference reference","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.reference.CtTypeParameterReference ref","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.reference.CtTypeReference reference","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.reference.CtUnboundVariableReference reference","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.reference.CtWildcardReference wildcardReference","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#scan(java.lang.Object)::java.lang.Object obj","spoon.reflect.visitor.CtScanner#scan(java.lang.Object)::1"
"spoon.reflect.visitor.CtScanner#scan(spoon.reflect.declaration.CtElement)::java.lang.Object o","spoon.reflect.visitor.CtScanner#scan(spoon.reflect.declaration.CtElement)::1"
"spoon.reflect.visitor.CtScanner#scan(spoon.reflect.declaration.CtElement)::spoon.reflect.declaration.CtElement e","spoon.reflect.visitor.CtScanner#scan(spoon.reflect.declaration.CtElement)::1"
"void enter(spoon.reflect.declaration.CtElement)::1","void enter(spoon.reflect.declaration.CtElement)::e"
"void exit(spoon.reflect.declaration.CtElement)::1","void exit(spoon.reflect.declaration.CtElement)::e"
"void scan(java.lang.Object)::1","void scan(java.lang.Object)::o"
"void scan(java.lang.Object)::java.lang.Object o","spoon.reflect.visitor.CtScanner#scan(spoon.reflect.declaration.CtElement)::java.lang.Object o"
"void scan(java.lang.Object)::java.lang.Object obj","spoon.reflect.visitor.CtScanner#scan(java.lang.Object)::java.lang.Object obj"
"void scan(java.util.Collection)::1","void scan(java.util.Collection)::elements"
"void scan(java.util.Collection)::spoon.reflect.declaration.CtElement e","spoon.reflect.visitor.CtScanner#scan(spoon.reflect.declaration.CtElement)::spoon.reflect.declaration.CtElement e"
"void scan(spoon.reflect.declaration.CtElement)::1","void scan(spoon.reflect.declaration.CtElement)::element"
"void visitCtAnonymousExecutable(spoon.reflect.declaration.CtAnonymousExecutable)::1","void visitCtAnonymousExecutable(spoon.reflect.declaration.CtAnonymousExecutable)::anonymousExec"
"void visitCtAnonymousExecutable(spoon.reflect.declaration.CtAnonymousExecutable)::spoon.reflect.declaration.CtAnonymousExecutable anonymousExec","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.declaration.CtAnonymousExecutable anonymousExec"
"void visitCtAnonymousExecutable(spoon.reflect.declaration.CtAnonymousExecutable)::spoon.reflect.declaration.CtAnonymousExecutable anonymousExec","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.declaration.CtAnonymousExecutable anonymousExec"
"void visitCtBreak(spoon.reflect.code.CtBreak)::1","void visitCtBreak(spoon.reflect.code.CtBreak)::breakStatement"
"void visitCtBreak(spoon.reflect.code.CtBreak)::spoon.reflect.code.CtBreak breakStatement","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtBreak breakStatement"
"void visitCtBreak(spoon.reflect.code.CtBreak)::spoon.reflect.code.CtBreak breakStatement","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtBreak breakStatement"
"void visitCtCatch(spoon.reflect.code.CtCatch)::1","void visitCtCatch(spoon.reflect.code.CtCatch)::catchBlock"
"void visitCtCatch(spoon.reflect.code.CtCatch)::spoon.reflect.code.CtCatch catchBlock","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtCatch catchBlock"
"void visitCtCatch(spoon.reflect.code.CtCatch)::spoon.reflect.code.CtCatch catchBlock","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtCatch catchBlock"
"void visitCtCodeSnippetStatement(spoon.reflect.code.CtCodeSnippetStatement)::1","void visitCtCodeSnippetStatement(spoon.reflect.code.CtCodeSnippetStatement)::statement"
"void visitCtCodeSnippetStatement(spoon.reflect.code.CtCodeSnippetStatement)::spoon.reflect.code.CtCodeSnippetStatement statement","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtCodeSnippetStatement statement"
"void visitCtCodeSnippetStatement(spoon.reflect.code.CtCodeSnippetStatement)::spoon.reflect.code.CtCodeSnippetStatement statement","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtCodeSnippetStatement statement"
"void visitCtComment(spoon.reflect.code.CtComment)::1","void visitCtComment(spoon.reflect.code.CtComment)::comment"
"void visitCtComment(spoon.reflect.code.CtComment)::spoon.reflect.code.CtComment comment","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtComment comment"
"void visitCtComment(spoon.reflect.code.CtComment)::spoon.reflect.code.CtComment comment","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtComment comment"
"void visitCtContinue(spoon.reflect.code.CtContinue)::1","void visitCtContinue(spoon.reflect.code.CtContinue)::continueStatement"
"void visitCtContinue(spoon.reflect.code.CtContinue)::spoon.reflect.code.CtContinue continueStatement","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtContinue continueStatement"
"void visitCtContinue(spoon.reflect.code.CtContinue)::spoon.reflect.code.CtContinue continueStatement","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtContinue continueStatement"
"void visitCtDo(spoon.reflect.code.CtDo)::1","void visitCtDo(spoon.reflect.code.CtDo)::doLoop"
"void visitCtDo(spoon.reflect.code.CtDo)::spoon.reflect.code.CtDo doLoop","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtDo doLoop"
"void visitCtDo(spoon.reflect.code.CtDo)::spoon.reflect.code.CtDo doLoop","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtDo doLoop"
"void visitCtFor(spoon.reflect.code.CtFor)::1","void visitCtFor(spoon.reflect.code.CtFor)::forLoop"
"void visitCtFor(spoon.reflect.code.CtFor)::spoon.reflect.code.CtFor forLoop","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtFor forLoop"
"void visitCtFor(spoon.reflect.code.CtFor)::spoon.reflect.code.CtFor forLoop","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtFor forLoop"
"void visitCtForEach(spoon.reflect.code.CtForEach)::1","void visitCtForEach(spoon.reflect.code.CtForEach)::foreach"
"void visitCtForEach(spoon.reflect.code.CtForEach)::spoon.reflect.code.CtForEach foreach","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtForEach foreach"
"void visitCtForEach(spoon.reflect.code.CtForEach)::spoon.reflect.code.CtForEach foreach","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtForEach foreach"
"void visitCtIf(spoon.reflect.code.CtIf)::1","void visitCtIf(spoon.reflect.code.CtIf)::ifElement"
"void visitCtIf(spoon.reflect.code.CtIf)::spoon.reflect.code.CtIf ifElement","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtIf ifElement"
"void visitCtIf(spoon.reflect.code.CtIf)::spoon.reflect.code.CtIf ifElement","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtIf ifElement"
"void visitCtPackage(spoon.reflect.declaration.CtPackage)::1","void visitCtPackage(spoon.reflect.declaration.CtPackage)::ctPackage"
"void visitCtPackage(spoon.reflect.declaration.CtPackage)::spoon.reflect.declaration.CtPackage ctPackage","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.declaration.CtPackage ctPackage"
"void visitCtPackage(spoon.reflect.declaration.CtPackage)::spoon.reflect.declaration.CtPackage ctPackage","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.declaration.CtPackage ctPackage"
"void visitCtPackageReference(spoon.reflect.reference.CtPackageReference)::1","void visitCtPackageReference(spoon.reflect.reference.CtPackageReference)::reference"
"void visitCtPackageReference(spoon.reflect.reference.CtPackageReference)::spoon.reflect.reference.CtPackageReference reference","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.reference.CtPackageReference reference"
"void visitCtPackageReference(spoon.reflect.reference.CtPackageReference)::spoon.reflect.reference.CtPackageReference reference","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.reference.CtPackageReference reference"
"void visitCtSynchronized(spoon.reflect.code.CtSynchronized)::1","void visitCtSynchronized(spoon.reflect.code.CtSynchronized)::synchro"
"void visitCtSynchronized(spoon.reflect.code.CtSynchronized)::spoon.reflect.code.CtSynchronized synchro","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtSynchronized synchro"
"void visitCtSynchronized(spoon.reflect.code.CtSynchronized)::spoon.reflect.code.CtSynchronized synchro","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtSynchronized synchro"
"void visitCtThrow(spoon.reflect.code.CtThrow)::1","void visitCtThrow(spoon.reflect.code.CtThrow)::throwStatement"
"void visitCtThrow(spoon.reflect.code.CtThrow)::spoon.reflect.code.CtThrow throwStatement","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtThrow throwStatement"
"void visitCtThrow(spoon.reflect.code.CtThrow)::spoon.reflect.code.CtThrow throwStatement","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtThrow throwStatement"
"void visitCtTry(spoon.reflect.code.CtTry)::1","void visitCtTry(spoon.reflect.code.CtTry)::tryBlock"
"void visitCtTry(spoon.reflect.code.CtTry)::spoon.reflect.code.CtTry tryBlock","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtTry tryBlock"
"void visitCtTry(spoon.reflect.code.CtTry)::spoon.reflect.code.CtTry tryBlock","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtTry tryBlock"
"void visitCtTryWithResource(spoon.reflect.code.CtTryWithResource)::1","void visitCtTryWithResource(spoon.reflect.code.CtTryWithResource)::tryWithResource"
"void visitCtTryWithResource(spoon.reflect.code.CtTryWithResource)::spoon.reflect.code.CtTryWithResource tryWithResource","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtTryWithResource tryWithResource"
"void visitCtTryWithResource(spoon.reflect.code.CtTryWithResource)::spoon.reflect.code.CtTryWithResource tryWithResource","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtTryWithResource tryWithResource"
"void visitCtTypeParameter(spoon.reflect.declaration.CtTypeParameter)::1","void visitCtTypeParameter(spoon.reflect.declaration.CtTypeParameter)::typeParameter"
"void visitCtTypeParameter(spoon.reflect.declaration.CtTypeParameter)::spoon.reflect.declaration.CtTypeParameter typeParameter","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.declaration.CtTypeParameter typeParameter"
"void visitCtTypeParameter(spoon.reflect.declaration.CtTypeParameter)::spoon.reflect.declaration.CtTypeParameter typeParameter","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.declaration.CtTypeParameter typeParameter"
"void visitCtTypeParameterReference(spoon.reflect.reference.CtTypeParameterReference)::1","void visitCtTypeParameterReference(spoon.reflect.reference.CtTypeParameterReference)::ref"
"void visitCtTypeParameterReference(spoon.reflect.reference.CtTypeParameterReference)::spoon.reflect.reference.CtTypeParameterReference ref","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.reference.CtTypeParameterReference ref"
"void visitCtTypeParameterReference(spoon.reflect.reference.CtTypeParameterReference)::spoon.reflect.reference.CtTypeParameterReference ref","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.reference.CtTypeParameterReference ref"
"void visitCtWhile(spoon.reflect.code.CtWhile)::1","void visitCtWhile(spoon.reflect.code.CtWhile)::whileLoop"
"void visitCtWhile(spoon.reflect.code.CtWhile)::spoon.reflect.code.CtWhile whileLoop","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtWhile whileLoop"
"void visitCtWhile(spoon.reflect.code.CtWhile)::spoon.reflect.code.CtWhile whileLoop","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.code.CtWhile whileLoop"
"void visitCtWildcardReference(spoon.reflect.reference.CtWildcardReference)::1","void visitCtWildcardReference(spoon.reflect.reference.CtWildcardReference)::wildcardReference"
"void visitCtWildcardReference(spoon.reflect.reference.CtWildcardReference)::spoon.reflect.reference.CtWildcardReference wildcardReference","spoon.reflect.visitor.CtScanner#enter(spoon.reflect.declaration.CtElement)::spoon.reflect.reference.CtWildcardReference wildcardReference"
"void visitCtWildcardReference(spoon.reflect.reference.CtWildcardReference)::spoon.reflect.reference.CtWildcardReference wildcardReference","spoon.reflect.visitor.CtScanner#exit(spoon.reflect.declaration.CtElement)::spoon.reflect.reference.CtWildcardReference wildcardReference"
